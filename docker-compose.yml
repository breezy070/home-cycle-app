

services:
  mongo:
    image: mongo:7
    container_name: hch_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "mongodb://localhost:27017", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 30

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hch_api
    depends_on:
      mongo:
        condition: service_healthy
    env_file: [.env]
    environment:
      # Explicit MONGO_URI for your code (it already reads process.env.MONGO_URI)
      MONGO_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DB}?authSource=admin
    ports:
      - "3000:3000"
    restart: unless-stopped

  # Optional: GUI at http://localhost:8081
  # mongo-express:
  #   image: mongo-express:1.0.2
  #   container_name: hch_mongo_express
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
  #     ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/?authSource=admin
  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD: admin
  #   ports:
  #     - "8081:8081"
  #   restart: unless-stopped

volumes:
  mongo_data:
